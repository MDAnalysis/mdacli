[tox]
minversion = 3.14.0
ignore_basepython_conflict = true
# these are the environments that will run when you
# execute `tox` in the command-line
# bellow you will find explanations for all environments
envlist =
    test
    build
    docs
    lint

# configures which environments run with each python version
[testenv]
basepython =
    {test,build,docs,lint,radon,safety}: {env:TOXPYTHON:python3}
passenv = *

# configures the unittest environment for python 3.7
[testenv:test]
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
usedevelop = false
# installs dependencies we need for testing
deps =
    MDAnalysis>=2.0.0
    MDAnalysisTests>=2.0.0
    coverage[toml]
    pytest
    pytest-cov
    hypothesis
# before running the tests erases any prerecord of coverage
commands_pre =
    coverage erase
# execute pytest
commands =
    pytest --cov --cov-report=term-missing --cov-append --cov-config=.coveragerc -vv --hypothesis-show-statistics {posargs}
# after executing the pytest assembles the coverage reports
commands_post =
    coverage report
    coverage html
    coverage xml

# separates lint from build env
[testenv:lint]
deps =
    flake8>=4
    flake8-docstrings
    flake8-bugbear
    pygments
    isort
skip_install = true
commands =
    flake8 {posargs:src/mdacli tests setup.py}
    isort --verbose --check-only --diff src/mdacli tests setup.py

# asserts package build integrity
[testenv:build]
# setenv here integrates with commit message in .bumpversion.cfg
# we can tests bump2version with an actual commit
setenv =
    COMMIT_MSG = Test commit message
deps =
    setuptools
    wheel
    twine
    docutils
    check-manifest
    readme-renderer
    bump2version
skip_install = true
commands_pre = python {toxinidir}/devtools/clean_dist_check.py
commands =
    python --version
    python {toxinidir}/devtools/check_changelog.py
    python setup.py sdist bdist_wheel
    twine check dist/*.whl
    twine check dist/*.tar.gz
    check-manifest {toxinidir}
    bump2version --dry-run --verbose --allow-dirty patch
    bump2version --dry-run --verbose --allow-dirty minor
    bump2version --dry-run --verbose --allow-dirty major
commands_post = python {toxinidir}/devtools/clean_dist_check.py

# code quality assessment. 
# This is not a check in the CI, serves just as info for the developers
[testenv:radon]
deps = radon
skip_install = true
commands =
    radon cc -s --total-average --no-assert {posargs:src/mdacli}
    radon mi -m -s {posargs:src/mdacli}

# Test docs building as it will occur on ReadTheDocs
[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/devtools/docs_requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs/rst dist/docs

[testenv:safety]
deps = safety
skip_install = true
commands = safety check

[flake8]
max_line_length = 80
hang-closing = true
ignore =
    W293
    W503
    D412
    D105
per-file-ignores = setup.py:E501
docstring-convention = numpy

[isort]
line_length = 80
indent = 4
multi_line_output = 8
include_trailing_comma = true
lines_after_imports = 2
sections=FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
known_first_party = mdacli
known_third_party =
    MDAnalysis
    hypothesis
    matplotlib
    numpy
    pytest

[tool:pytest]
addopts = -p pytest_cov
python_files =
    test_*.py
    *_test.py
    tests.py
testpaths =
    tests
